Last Lecture
1 Routing 
	- navigation from one component to another component
2 Routing Steps
	1 configure the route 
		const route:Route[]=[
			{
				path:"",component:HomeComponent
			}
			{
				path:"Page1",component:Page1Component
			},
			{
				path:"Page2/:id",component:Page2Component
			},
			....
			
			{
				path:"**",component:NotFountComponent
			}
		]
		
		app.component.html
		<router-outlet>
		
		home.ts
		
		id:number=9;
		
		home.html
		<a [routerLink]="['/Page2',id]">Page2 </a>
		...
		follower.html
		<img routerLink="/myfollower">
		<a routerLink="">Home </a>
		
		myfollower.html
		<button routerLink="/follower">
		
		page2.ts
		constructor(private route:ActivatatedRoute){}
		
		ngOninit(){
			this.GetFromUrl()
		}
		
		GetFromUrl(){
			this.route.ParamMap
			.subscribe((param:any)=>{
				this.myid=+param.get("id");
			})
		}
		page2.html 
		{{myid}}
		
	2 <router-outlet>
	3 establish the link/navigate  between component
3 empty path
4 wild cart operator
5 send parameter

Today Lecture

BackEnd
 create 2 table 
 employee & country
 employee => 
	1 id => primary => autogenerated
	2 name 
	3 emailid 
	4 mobile no
	5 status => data => active/inactive/suspend
	6 department 
	7 createdDate => data => date 
	8 createdBy  => name 
	9 updatatedDate =>data => date
	10 updatatedby => name 
	11 country => one to one mapping => foregin key
	
country => 
	cid 1,2 => primary  => autogenerated
	cname india, us 
	
Api 
 1 postEmpl => employee created successfully 
 2 getall  => list of empl 
				
			[
				{
						id:..,
						name : ...
						...
						country :{
							cid:1
							cname:'India'
						}
					},
				{
					id:..,
					name : ...
					...
					country :{
						cid:1
						cname:'India'
					}
				}
			]	
			
 3 updateemp => employee emp name is updated successfully
 4 deleteEmp  => employee empname is deleted successfully
 5 getempById => employee object 
				=> {
					id:..,
					name : ...
					...
					country :{
						cid:1
						cname:'India'
					}
				}
 6 getEmpbyStatus => List of employee object 
					[
						{
							id:..,
							name : ...
							...
							country :{
								cid:1
								cname:'India'
							}
						},
						{
							id:..,
							name : ...
							...
							country :{
								cid:1
								cname:'India'
							}
				}
					]
 7 getAllcountry  => list of country 
 8 postcoutry   => country created successfully
 9 updatecountry => country updated 
 10 deletecountry  => country deleted 
 11 getcountryById  => country object 
 



	
	
		







	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	